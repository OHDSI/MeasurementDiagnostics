[{"path":"https://ohdsi.github.io/MeasurementDiagnostics/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright [yyyy] [name of copyright owner]  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/articles/summariseMeasurementUse.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Summarising measurement use in a dataset","text":"vignette see can summarise use measurement concepts dataset whole. example ’re going interested measurement concepts related respiratory function use Eunomia synthetic dataset. First connect database create cdm reference. Now ’ll create codelist measurement concepts. general summary use codes dataset can use summariseCodeUse CodelistGenerator R package. Although now general summary use measurement codes, may well want information measurements inform study feasibility design. MeasurementDiagnostics helps us perform additional, measurement specific, diagnostic checks. ’ll simply call summariseMeasurementUse() function run series checks. similar packages, results returned summarised_result format defined omopgenerics package. can see checks performed. One checks summarises numeric values associated tests. can quickly create table summarising results. Similarly, can see summary concept values associated measurements. can see respiratory function measurements concept value results (instead numeric values see table ). well overview values measurements, can also see summary timing measurements individuals dataset.","code":"library(duckdb) library(omopgenerics) library(CDMConnector) library(dplyr) con <- dbConnect(duckdb(), dbdir = eunomiaDir()) #> Creating CDM database /tmp/RtmpjP7YbT/GiBleed_5.3.zip cdm <- cdmFromCon(   con = con, cdmSchem = \"main\", writeSchema = \"main\", cdmName = \"Eunomia\" ) cdm #>  #> ── # OMOP CDM reference (duckdb) of Eunomia ──────────────────────────────────── #> • omop tables: care_site, cdm_source, concept, concept_ancestor, concept_class, #> concept_relationship, concept_synonym, condition_era, condition_occurrence, #> cost, death, device_exposure, domain, dose_era, drug_era, drug_exposure, #> drug_strength, fact_relationship, location, measurement, metadata, note, #> note_nlp, observation, observation_period, payer_plan_period, person, #> procedure_occurrence, provider, relationship, source_to_concept_map, specimen, #> visit_detail, visit_occurrence, vocabulary #> • cohort tables: - #> • achilles tables: - #> • other tables: - repiratory_function_codes <- newCodelist(list(\"respiratory function\" = c(4052083, 4133840, 3011505))) repiratory_function_codes #>  #> - respiratory function (3 codes) library(CodelistGenerator) code_use <- summariseCodeUse(repiratory_function_codes, cdm) tableCodeUse(code_use) library(MeasurementDiagnostics)  repiratory_function_measurements <- summariseMeasurementUse(cdm, repiratory_function_codes) repiratory_function_measurements |>    glimpse() #> Rows: 2,100 #> Columns: 13 #> $ result_id        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,… #> $ cdm_name         <chr> \"Eunomia\", \"Eunomia\", \"Eunomia\", \"Eunomia\", \"Eunomia\"… #> $ group_name       <chr> \"codelist_name\", \"codelist_name\", \"codelist_name\", \"c… #> $ group_level      <chr> \"respiratory function\", \"respiratory function\", \"resp… #> $ strata_name      <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ strata_level     <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ variable_name    <chr> \"number records\", \"number subjects\", \"time\", \"time\", … #> $ variable_level   <chr> NA, NA, NA, NA, NA, NA, NA, \"density_001\", \"density_0… #> $ estimate_name    <chr> \"count\", \"count\", \"min\", \"q25\", \"median\", \"q75\", \"max… #> $ estimate_type    <chr> \"integer\", \"integer\", \"numeric\", \"numeric\", \"numeric\"… #> $ estimate_value   <chr> \"8728\", \"2096\", \"0\", \"0\", \"371\", \"1726.25\", \"33541\", … #> $ additional_name  <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… #> $ additional_level <chr> \"overall\", \"overall\", \"overall\", \"overall\", \"overall\"… settings(repiratory_function_measurements) |>    pull(\"result_type\") |>    unique() #> [1] \"measurement_timings\"          \"measurement_value_as_numeric\" #> [3] \"measurement_value_as_concept\" tableMeasurementValueAsNumeric(repiratory_function_measurements) tableMeasurementValueAsConcept(repiratory_function_measurements) tableMeasurementTimings(repiratory_function_measurements)"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Edward Burn. Author. Nuria Mercade-Besora. Author, maintainer. Marta Alcalde-Herraiz. Author.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Burn E, Mercade-Besora N, Alcalde-Herraiz M (2025). MeasurementDiagnostics: Diagnostics Lists Codes Based Measurements. R package version 0.0.1, https://ohdsi.github.io/MeasurementDiagnostics/.","code":"@Manual{,   title = {MeasurementDiagnostics: Diagnostics for Lists of Codes Based on Measurements},   author = {Edward Burn and Nuria Mercade-Besora and Marta Alcalde-Herraiz},   year = {2025},   note = {R package version 0.0.1},   url = {https://ohdsi.github.io/MeasurementDiagnostics/}, }"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/index.html","id":"measurementdiagnostics-","dir":"","previous_headings":"","what":"Diagnostics for Lists of Codes Based on Measurements","title":"Diagnostics for Lists of Codes Based on Measurements","text":"MeasurementDiagnostics package helps us assess use measurements present data mapped OMOP CDM, either dataset whole particular cohort.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Diagnostics for Lists of Codes Based on Measurements","text":"can install development version MeasurementDiagnostics GitHub :","code":"# install.packages(\"pak\") pak::pak(\"ohdsi/MeasurementDiagnostics\")"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Diagnostics for Lists of Codes Based on Measurements","text":"Let’s say going study going using measurements respiratory function. can use MeasurementDiagnostics better understand use measurements. example ’ll use Eunomia data. Now cdm reference data, create codelist measurement concepts. now can run set measurement diagnostic checks, stratifying results sex. Among results summary timings measurements individuals dataset. can quickly create plot results like ","code":"library(duckdb) library(omopgenerics) library(CDMConnector) library(dplyr) library(MeasurementDiagnostics) con <- dbConnect(duckdb(), dbdir = eunomiaDir()) cdm <- cdmFromCon(   con = con, cdmSchem = \"main\", writeSchema = \"main\", cdmName = \"Eunomia\" ) cdm #>  #> ── # OMOP CDM reference (duckdb) of Eunomia ──────────────────────────────────── #> • omop tables: person, observation_period, visit_occurrence, visit_detail, #> condition_occurrence, drug_exposure, procedure_occurrence, device_exposure, #> measurement, observation, death, note, note_nlp, specimen, fact_relationship, #> location, care_site, provider, payer_plan_period, cost, drug_era, dose_era, #> condition_era, metadata, cdm_source, concept, vocabulary, domain, #> concept_class, concept_relationship, relationship, concept_synonym, #> concept_ancestor, source_to_concept_map, drug_strength #> • cohort tables: - #> • achilles tables: - #> • other tables: - respiratory_function_codes <- newCodelist(list(\"respiratory function\" = c(4052083L, 4133840L, 3011505L))) respiratory_function_codes #>  #> - respiratory function (3 codes) respiratory_function_measurements <- summariseMeasurementUse(cdm, respiratory_function_codes, bySex = TRUE) plotMeasurementTimings(respiratory_function_measurements |>      dplyr::filter(variable_name == \"time\"))"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/mockMeasurementDiagnostics.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to create a mock cdm reference. — mockMeasurementDiagnostics","title":"Function to create a mock cdm reference. — mockMeasurementDiagnostics","text":"Creates example dataset can used show package works","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/mockMeasurementDiagnostics.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to create a mock cdm reference. — mockMeasurementDiagnostics","text":"","code":"mockMeasurementDiagnostics(   nPerson = 100,   con = DBI::dbConnect(duckdb::duckdb()),   writeSchema = \"main\",   seed = 111 )"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/mockMeasurementDiagnostics.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to create a mock cdm reference. — mockMeasurementDiagnostics","text":"nPerson number people cdm. con DBI connection create cdm mock object. writeSchema Name schema connection writing permissions. seed seed use creating mock data.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/mockMeasurementDiagnostics.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to create a mock cdm reference. — mockMeasurementDiagnostics","text":"cdm object","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/mockMeasurementDiagnostics.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to create a mock cdm reference. — mockMeasurementDiagnostics","text":"","code":"# \\donttest{ library(MeasurementDiagnostics) cdm <- mockMeasurementDiagnostics() cdm #>  #> ── # OMOP CDM reference (duckdb) of mock database ────────────────────────────── #> • omop tables: cdm_source, concept, concept_ancestor, concept_relationship, #> concept_synonym, condition_occurrence, drug_exposure, drug_strength, #> measurement, observation, observation_period, person, procedure_occurrence, #> visit_occurrence, vocabulary #> • cohort tables: my_cohort #> • achilles tables: - #> • other tables: - # }"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/plotDoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for consistent documentation of `plot`. — plotDoc","title":"Helper for consistent documentation of `plot`. — plotDoc","text":"Helper consistent documentation `plot`.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/plotDoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for consistent documentation of `plot`. — plotDoc","text":"x Columns use horizontal axes. See options `visOmopResults::plotColumns(result)`. y Columns use horizontal axes. See options `visOmopResults::plotColumns(result)`. plotType Type plot, either \"boxplot\" \"densityplot\". facet Columns facet . See options `visOmopResults::plotColumns(result)`. Formula input also allowed specify rows columns. colour Columns color . See options `visOmopResults::plotColumns(result)`.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/plotMeasurementTimings.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot summariseMeasurementTiming results. — plotMeasurementTimings","title":"Plot summariseMeasurementTiming results. — plotMeasurementTimings","text":"Plot summariseMeasurementTiming results.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/plotMeasurementTimings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot summariseMeasurementTiming results. — plotMeasurementTimings","text":"","code":"plotMeasurementTimings(   result,   y = \"time\",   plotType = \"boxplot\",   timeScale = \"days\",   facet = visOmopResults::strataColumns(result),   colour = c(\"cdm_name\", \"codelist_name\") )"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/plotMeasurementTimings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot summariseMeasurementTiming results. — plotMeasurementTimings","text":"result summarised_result object. y Variable plot y axis, can \"time\" measurements_per_subject\". plotType Type plot, either \"boxplot\" \"densityplot\". timeScale Time scale show, can \"days\" \"years\". facet Columns facet . See options `visOmopResults::plotColumns(result)`. Formula input also allowed specify rows columns. colour Columns color . See options `visOmopResults::plotColumns(result)`.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/plotMeasurementTimings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot summariseMeasurementTiming results. — plotMeasurementTimings","text":"ggplot.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/plotMeasurementTimings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot summariseMeasurementTiming results. — plotMeasurementTimings","text":"","code":"# \\donttest{ library(MeasurementDiagnostics) cdm <- mockMeasurementDiagnostics() result <- summariseMeasurementUse(               cdm = cdm,               codes = list(\"test_codelist\" = c(3001467L, 45875977L))            ) #> → Getting measurement records based on 2 concepts. #> → Subsetting records to the subjects and timing of interest. #> → Getting time between records per person. #> → Summarising results - value as number. #> → Summarising results - value as concept. #> → Binding all diagnostic results. result |>   dplyr::filter(variable_name == \"time\") |>   plotMeasurementTimings()  CDMConnector::cdmDisconnect(cdm) # }"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/plotMeasurementValueAsConcept.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot summariseMeasurementTiming results. — plotMeasurementValueAsConcept","title":"Plot summariseMeasurementTiming results. — plotMeasurementValueAsConcept","text":"Plot summariseMeasurementTiming results.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/plotMeasurementValueAsConcept.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot summariseMeasurementTiming results. — plotMeasurementValueAsConcept","text":"","code":"plotMeasurementValueAsConcept(   result,   x = \"count\",   y = \"codelist_name\",   facet = c(\"cdm_name\"),   colour = c(\"concept_name\", \"variable_level\", visOmopResults::strataColumns(result)) )"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/plotMeasurementValueAsConcept.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot summariseMeasurementTiming results. — plotMeasurementValueAsConcept","text":"result summarised_result object. x Columns use horizontal axes. See options `visOmopResults::plotColumns(result)`. y Columns use horizontal axes. See options `visOmopResults::plotColumns(result)`. facet Columns facet . See options `visOmopResults::plotColumns(result)`. Formula input also allowed specify rows columns. colour Columns color . See options `visOmopResults::plotColumns(result)`.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/plotMeasurementValueAsConcept.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot summariseMeasurementTiming results. — plotMeasurementValueAsConcept","text":"ggplot.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/plotMeasurementValueAsConcept.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot summariseMeasurementTiming results. — plotMeasurementValueAsConcept","text":"","code":"# \\donttest{ library(MeasurementDiagnostics) cdm <- mockMeasurementDiagnostics() result <- summariseMeasurementUse(               cdm = cdm,               bySex = TRUE,               codes = list(\"test_codelist\" = c(3001467L, 45875977L))) #> → Getting measurement records based on 2 concepts. #> → Subsetting records to the subjects and timing of interest. #> → Getting time between records per person. #> → Summarising results - value as number. #> → Summarising results - value as concept. #> → Binding all diagnostic results. plotMeasurementValueAsConcept(result)  CDMConnector::cdmDisconnect(cdm) # }"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/plotMeasurementValueAsNumeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot summariseMeasurementTiming results. — plotMeasurementValueAsNumeric","title":"Plot summariseMeasurementTiming results. — plotMeasurementValueAsNumeric","text":"Plot summariseMeasurementTiming results.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/plotMeasurementValueAsNumeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot summariseMeasurementTiming results. — plotMeasurementValueAsNumeric","text":"","code":"plotMeasurementValueAsNumeric(   result,   x = c(\"unit_concept_name\"),   plotType = \"boxplot\",   facet = c(\"codelist_name\", \"concept_name\"),   colour = c(\"cdm_name\", \"unit_concept_name\", visOmopResults::strataColumns(result)) )"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/plotMeasurementValueAsNumeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot summariseMeasurementTiming results. — plotMeasurementValueAsNumeric","text":"result summarised_result object. x Columns use horizontal axes. See options `visOmopResults::plotColumns(result)`. plotType Type plot, either \"boxplot\" \"densityplot\". facet Columns facet . See options `visOmopResults::plotColumns(result)`. Formula input also allowed specify rows columns. colour Columns color . See options `visOmopResults::plotColumns(result)`.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/plotMeasurementValueAsNumeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot summariseMeasurementTiming results. — plotMeasurementValueAsNumeric","text":"ggplot.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/plotMeasurementValueAsNumeric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot summariseMeasurementTiming results. — plotMeasurementValueAsNumeric","text":"","code":"# \\donttest{ library(MeasurementDiagnostics) cdm <- mockMeasurementDiagnostics() result <- summariseMeasurementUse(               cdm = cdm,               bySex = TRUE,               codes = list(\"test_codelist\" = c(3001467L, 45875977L))) #> → Getting measurement records based on 2 concepts. #> → Subsetting records to the subjects and timing of interest. #> → Getting time between records per person. #> → Summarising results - value as number. #> → Summarising results - value as concept. #> → Binding all diagnostic results. plotMeasurementValueAsNumeric(result)  CDMConnector::cdmDisconnect(cdm) # }"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/resultDoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for consistent documentation of `result`. — resultDoc","title":"Helper for consistent documentation of `result`. — resultDoc","text":"Helper consistent documentation `result`.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/resultDoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for consistent documentation of `result`. — resultDoc","text":"result summarised_result object.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/summariseCohortMeasurementUse.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostics of a codelist of measurement codes within a cohort — summariseCohortMeasurementUse","title":"Diagnostics of a codelist of measurement codes within a cohort — summariseCohortMeasurementUse","text":"Diagnostics codelist measurement codes within cohort","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/summariseCohortMeasurementUse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostics of a codelist of measurement codes within a cohort — summariseCohortMeasurementUse","text":"","code":"summariseCohortMeasurementUse(   codes,   cohort,   timing = \"during\",   byConcept = TRUE,   byYear = FALSE,   bySex = FALSE,   ageGroup = NULL,   dateRange = as.Date(c(NA, NA)),   checks = c(\"measurement_timings\", \"measurement_value_as_numeric\",     \"measurement_value_as_concept\") )"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/summariseCohortMeasurementUse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnostics of a codelist of measurement codes within a cohort — summariseCohortMeasurementUse","text":"codes codelist measurement/observation codes perform diagnostics. cohort cohort perform diagnostics measurement codes provided. timing Three options: 1) \"\" interest measurement recorded time, 2) \"\", interested measurements subject cohort (observation cohort = NULL), 3) \"cohort_start_date\" measurements occurring cohort start date (\"observation_period_start_date cohort = NULL). byConcept TRUE FALSE. TRUE code use summarised concept. byYear TRUE FALSE. TRUE code use summarised year. bySex TRUE FALSE. TRUE code use summarised sex. ageGroup NULL, list ageGroup vectors length two. dateRange Two dates. first indicating earliest measurement date second indicating latest possible measurement date. checks Diagnostics run. Options : \"measurement_timing\", \"measurement_value_as_numeric\", \"measurement_value_as_concept\".","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/summariseCohortMeasurementUse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diagnostics of a codelist of measurement codes within a cohort — summariseCohortMeasurementUse","text":"summarised result","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/summariseCohortMeasurementUse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diagnostics of a codelist of measurement codes within a cohort — summariseCohortMeasurementUse","text":"","code":"# \\donttest{ library(MeasurementDiagnostics) cdm <- mockMeasurementDiagnostics() result <- summariseCohortMeasurementUse(   codes = list(\"test_codelist\" = c(3001467L, 45875977L)),   cohort = cdm$my_cohort, timing = \"cohort_start_date\" ) #> → Getting measurement records based on 2 concepts. #> → Subsetting records to the subjects and timing of interest. #> → Getting time between records per person. #> ! 2 duplicated rows eliminated. #> → Summarising results - value as number. #> → Summarising results - value as concept. #> → Binding all diagnostic results. CDMConnector::cdmDisconnect(cdm = cdm) # }"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/summariseMeasurementDoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for consistent documentation of `summariseMeasurement` functions. — summariseMeasurementDoc","title":"Helper for consistent documentation of `summariseMeasurement` functions. — summariseMeasurementDoc","text":"Helper consistent documentation `summariseMeasurement` functions.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/summariseMeasurementDoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for consistent documentation of `summariseMeasurement` functions. — summariseMeasurementDoc","text":"cdm reference cdm object. codes codelist measurement/observation codes perform diagnostics. cohort cohort perform diagnostics measurement codes provided. timing Three options: 1) \"\" interest measurement recorded time, 2) \"\", interested measurements subject cohort (observation cohort = NULL), 3) \"cohort_start_date\" measurements occurring cohort start date (\"observation_period_start_date cohort = NULL). byConcept TRUE FALSE. TRUE code use summarised concept. byYear TRUE FALSE. TRUE code use summarised year. bySex TRUE FALSE. TRUE code use summarised sex. ageGroup NULL, list ageGroup vectors length two. dateRange Two dates. first indicating earliest measurement date second indicating latest possible measurement date. checks Diagnostics run. Options : \"measurement_timing\", \"measurement_value_as_numeric\", \"measurement_value_as_concept\".","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/summariseMeasurementUse.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagnostics of a codelist of measurement codes in the database — summariseMeasurementUse","title":"Diagnostics of a codelist of measurement codes in the database — summariseMeasurementUse","text":"Diagnostics codelist measurement codes database","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/summariseMeasurementUse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagnostics of a codelist of measurement codes in the database — summariseMeasurementUse","text":"","code":"summariseMeasurementUse(   cdm,   codes,   byConcept = TRUE,   byYear = FALSE,   bySex = FALSE,   ageGroup = NULL,   dateRange = as.Date(c(NA, NA)),   checks = c(\"measurement_timings\", \"measurement_value_as_numeric\",     \"measurement_value_as_concept\") )"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/summariseMeasurementUse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagnostics of a codelist of measurement codes in the database — summariseMeasurementUse","text":"cdm reference cdm object. codes codelist measurement/observation codes perform diagnostics. byConcept TRUE FALSE. TRUE code use summarised concept. byYear TRUE FALSE. TRUE code use summarised year. bySex TRUE FALSE. TRUE code use summarised sex. ageGroup NULL, list ageGroup vectors length two. dateRange Two dates. first indicating earliest measurement date second indicating latest possible measurement date. checks Diagnostics run. Options : \"measurement_timing\", \"measurement_value_as_numeric\", \"measurement_value_as_concept\".","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/summariseMeasurementUse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diagnostics of a codelist of measurement codes in the database — summariseMeasurementUse","text":"summarised result","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/summariseMeasurementUse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diagnostics of a codelist of measurement codes in the database — summariseMeasurementUse","text":"","code":"# \\donttest{ library(MeasurementDiagnostics) cdm <- mockMeasurementDiagnostics() result <- summariseMeasurementUse(   cdm = cdm, codes = list(\"test_codelist\" = c(3001467L, 45875977L)) ) #> → Getting measurement records based on 2 concepts. #> → Subsetting records to the subjects and timing of interest. #> → Getting time between records per person. #> → Summarising results - value as number. #> → Summarising results - value as concept. #> → Binding all diagnostic results. CDMConnector::cdmDisconnect(cdm = cdm) # }"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/tableDoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for consistent documentation of `table`. — tableDoc","title":"Helper for consistent documentation of `table`. — tableDoc","text":"Helper consistent documentation `table`.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/tableDoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for consistent documentation of `table`. — tableDoc","text":"type Type table. Check supported types `visOmopResults::tableType()`. header Columns use header. See options `visOmopResults::tableColumns(result)`. groupColumn Columns group . See options `visOmopResults::tableColumns(result)`. settingsColumn Columns settings include results. See options `visOmopResults::settingsColumns(result)`. hide Columns hide visualisation. See options `visOmopResults::tableColumns(result)`. style Named list specifies style different parts table generated. can either pre-defined style (\"default\" \"darwin\" - latter just gt flextable), NULL get table type default style, custom. Keep mind styling code different table styles. see different styles use visOmopResults::tableStyle(). .options named list additional formatting options. `visOmopResults::tableOptions()` shows allowed arguments default values.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/tableMeasurementTimings.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a measurement_timings object into a visual table — tableMeasurementTimings","title":"Format a measurement_timings object into a visual table — tableMeasurementTimings","text":"Format measurement_timings object visual table","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/tableMeasurementTimings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a measurement_timings object into a visual table — tableMeasurementTimings","text":"","code":"tableMeasurementTimings(   result,   type = \"gt\",   header = c(visOmopResults::strataColumns(result)),   groupColumn = c(\"codelist_name\"),   settingsColumn = character(),   hide = c(\"variable_level\"),   style = \"default\",   .options = list() )"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/tableMeasurementTimings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a measurement_timings object into a visual table — tableMeasurementTimings","text":"result summarised_result object. type Type table. Check supported types `visOmopResults::tableType()`. header Columns use header. See options `visOmopResults::tableColumns(result)`. groupColumn Columns group . See options `visOmopResults::tableColumns(result)`. settingsColumn Columns settings include results. See options `visOmopResults::settingsColumns(result)`. hide Columns hide visualisation. See options `visOmopResults::tableColumns(result)`. style Named list specifies style different parts table generated. can either pre-defined style (\"default\" \"darwin\" - latter just gt flextable), NULL get table type default style, custom. Keep mind styling code different table styles. see different styles use visOmopResults::tableStyle(). .options named list additional formatting options. `visOmopResults::tableOptions()` shows allowed arguments default values.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/tableMeasurementTimings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a measurement_timings object into a visual table — tableMeasurementTimings","text":"formatted table","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/tableMeasurementTimings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a measurement_timings object into a visual table — tableMeasurementTimings","text":"","code":"# \\donttest{ library(MeasurementDiagnostics) cdm <- mockMeasurementDiagnostics() result <- summariseMeasurementUse(               cdm = cdm,               codes = list(\"test_codelist\" = c(3001467L, 45875977L))) #> → Getting measurement records based on 2 concepts. #> → Subsetting records to the subjects and timing of interest. #> → Getting time between records per person. #> → Summarising results - value as number. #> → Summarising results - value as concept. #> → Binding all diagnostic results. tableMeasurementTimings(result)     CDM name       Variable name       Estimate name       Estimate value     test_codelist     mock database Number records N 100 Number subjects N 67 Time (days) Median [Q25 - Q75] 249.00 [67.00 - 645.00]  Range 8.00 to 2,886.00 Measurements per subject Median [Q25 - Q75] 2.00 [1.00 - 2.00]  Range 1.00 to 4.00CDMConnector::cdmDisconnect(cdm = cdm) # }"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/tableMeasurementValueAsConcept.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a measurement_timings object into a visual table — tableMeasurementValueAsConcept","title":"Format a measurement_timings object into a visual table — tableMeasurementValueAsConcept","text":"Format measurement_timings object visual table","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/tableMeasurementValueAsConcept.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a measurement_timings object into a visual table — tableMeasurementValueAsConcept","text":"","code":"tableMeasurementValueAsConcept(   result,   type = \"gt\",   header = c(visOmopResults::strataColumns(result)),   groupColumn = c(\"codelist_name\"),   settingsColumn = character(),   hide = character(),   style = \"default\",   .options = list() )"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/tableMeasurementValueAsConcept.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a measurement_timings object into a visual table — tableMeasurementValueAsConcept","text":"result summarised_result object. type Type table. Check supported types `visOmopResults::tableType()`. header Columns use header. See options `visOmopResults::tableColumns(result)`. groupColumn Columns group . See options `visOmopResults::tableColumns(result)`. settingsColumn Columns settings include results. See options `visOmopResults::settingsColumns(result)`. hide Columns hide visualisation. See options `visOmopResults::tableColumns(result)`. style Named list specifies style different parts table generated. can either pre-defined style (\"default\" \"darwin\" - latter just gt flextable), NULL get table type default style, custom. Keep mind styling code different table styles. see different styles use visOmopResults::tableStyle(). .options named list additional formatting options. `visOmopResults::tableOptions()` shows allowed arguments default values.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/tableMeasurementValueAsConcept.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a measurement_timings object into a visual table — tableMeasurementValueAsConcept","text":"formatted table","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/tableMeasurementValueAsConcept.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a measurement_timings object into a visual table — tableMeasurementValueAsConcept","text":"","code":"# \\donttest{ library(MeasurementDiagnostics) cdm <- mockMeasurementDiagnostics() result <- summariseMeasurementUse(               cdm = cdm,               codes = list(\"test_codelist\" = c(3001467L, 45875977L))) #> → Getting measurement records based on 2 concepts. #> → Subsetting records to the subjects and timing of interest. #> → Getting time between records per person. #> → Summarising results - value as number. #> → Summarising results - value as concept. #> → Binding all diagnostic results. tableMeasurementValueAsConcept(result)     CDM name       Concept name       Concept ID       Domain ID       Variable name       Value as concept name       Value as concept ID       Estimate name       Estimate value     test_codelist     mock database overall overall overall Value as concept name Low 4267416 N (%) 34 (34.00%)     High 4328749 N (%) 33 (33.00%)     - - N (%) 33 (33.00%) Alkaline phosphatase.bone [Enzymatic activity/volume] in Serum or Plasma 3001467 Measurement Value as concept name Low 4267416 N (%) 34 (34.00%)     High 4328749 N (%) 33 (33.00%)     - - N (%) 33 (33.00%)CDMConnector::cdmDisconnect(cdm = cdm) # }"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/tableMeasurementValueAsNumeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a measurement_timings object into a visual table — tableMeasurementValueAsNumeric","title":"Format a measurement_timings object into a visual table — tableMeasurementValueAsNumeric","text":"Format measurement_timings object visual table","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/tableMeasurementValueAsNumeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a measurement_timings object into a visual table — tableMeasurementValueAsNumeric","text":"","code":"tableMeasurementValueAsNumeric(   result,   type = \"gt\",   header = c(visOmopResults::strataColumns(result)),   groupColumn = c(\"codelist_name\"),   settingsColumn = character(),   hide = c(\"variable_name\", \"variable_level\"),   style = \"default\",   .options = list() )"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/tableMeasurementValueAsNumeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a measurement_timings object into a visual table — tableMeasurementValueAsNumeric","text":"result summarised_result object. type Type table. Check supported types `visOmopResults::tableType()`. header Columns use header. See options `visOmopResults::tableColumns(result)`. groupColumn Columns group . See options `visOmopResults::tableColumns(result)`. settingsColumn Columns settings include results. See options `visOmopResults::settingsColumns(result)`. hide Columns hide visualisation. See options `visOmopResults::tableColumns(result)`. style Named list specifies style different parts table generated. can either pre-defined style (\"default\" \"darwin\" - latter just gt flextable), NULL get table type default style, custom. Keep mind styling code different table styles. see different styles use visOmopResults::tableStyle(). .options named list additional formatting options. `visOmopResults::tableOptions()` shows allowed arguments default values.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/tableMeasurementValueAsNumeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a measurement_timings object into a visual table — tableMeasurementValueAsNumeric","text":"formatted table","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/tableMeasurementValueAsNumeric.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a measurement_timings object into a visual table — tableMeasurementValueAsNumeric","text":"","code":"# \\donttest{ library(MeasurementDiagnostics) cdm <- mockMeasurementDiagnostics() result <- summariseMeasurementUse(               cdm = cdm,               codes = list(\"test_codelist\" = c(3001467L, 45875977L))) #> → Getting measurement records based on 2 concepts. #> → Subsetting records to the subjects and timing of interest. #> → Getting time between records per person. #> → Summarising results - value as number. #> → Summarising results - value as concept. #> → Binding all diagnostic results. tableMeasurementValueAsNumeric(result)     CDM name       Concept name       Concept ID       Domain ID       Unit concept name       Unit concept ID       Estimate name       Estimate value     test_codelist     mock database overall overall overall kilogram 9529 N 50      Median [Q25 - Q75] 8.77 [7.07 - 10.48]      Range 5.36 to 12.18      Missing value, N (%) 2 (4.00%)    - - N 50      Median [Q25 - Q75] 8.77 [7.10 - 10.44]      Range 5.44 to 12.11      Missing value, N (%) 3 (6.00%) Alkaline phosphatase.bone [Enzymatic activity/volume] in Serum or Plasma 3001467 Measurement kilogram 9529 N 50      Median [Q25 - Q75] 8.77 [7.07 - 10.48]      Range 5.36 to 12.18      Missing value, N (%) 2 (4.00%)    - - N 50      Median [Q25 - Q75] 8.77 [7.10 - 10.44]      Range 5.44 to 12.11      Missing value, N (%) 3 (6.00%)CDMConnector::cdmDisconnect(cdm = cdm) # }"},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/timeScaleDoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for consistent documentation of `timeScale`. — timeScaleDoc","title":"Helper for consistent documentation of `timeScale`. — timeScaleDoc","text":"Helper consistent documentation `timeScale`.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/timeScaleDoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for consistent documentation of `timeScale`. — timeScaleDoc","text":"timeScale Time scale show, can \"days\" \"years\".","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/uniqueCombinationsDoc.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper for consistent documentation of `uniqueCombinations`. — uniqueCombinationsDoc","title":"Helper for consistent documentation of `uniqueCombinations`. — uniqueCombinationsDoc","text":"Helper consistent documentation `uniqueCombinations`.","code":""},{"path":"https://ohdsi.github.io/MeasurementDiagnostics/reference/uniqueCombinationsDoc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper for consistent documentation of `uniqueCombinations`. — uniqueCombinationsDoc","text":"uniqueCombinations Whether restrict unique reference comparator comparisons.","code":""}]
